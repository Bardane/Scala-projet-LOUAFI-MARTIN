[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\theom\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\theom\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 178.4701ms
[debug]       Load.loadUnit: defsScala took 0.6443ms
[debug] [Loading] Scanning directory C:\Users\theom\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\theom\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 35.9179 ms
[debug]           Load.resolveProject(global-plugins) took 131.7713ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\theom\.sbt\1.0\plugins, plugins: List(<none>))) took 213.3293ms
[debug] [Loading] Done in C:\Users\theom\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 258.0341ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.8428ms
[debug]     Load.loadUnit(file:/C:/Users/theom/.sbt/1.0/plugins/, ...) took 455.5053ms
[debug]   Load.apply: load took 827.2848ms
[debug]   Load.apply: resolveProjects took 12.1443ms
[debug]   Load.apply: finalTransforms took 130.8683ms
[debug]   Load.apply: config.delegates took 17.4757ms
[debug]   Load.apply: Def.make(settings)... took 876.6747ms
[debug]   Load.apply: structureIndex took 193.1509ms
[debug]   Load.apply: mkStreams took 2.9144ms
[info] loading global plugins from C:\Users\theom\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4548.9109ms
[debug]           Load.loadUnit: plugins took 37.6594ms
[debug]           Load.loadUnit: defsScala took 0.0237ms
[debug] [Loading] Scanning directory C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject\project
[debug]             Load.loadUnit: mkEval took 10.6098ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.036 ms
[info] loading settings for project airportproject-build from idea.sbt ...
[debug]               Load.resolveProject(airportproject-build) took 8.9082ms
[debug]             Load.loadTransitive: finalizeProject(Project(id airportproject-build, base: C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject\project, plugins: List(<none>))) took 18.5889ms
[debug] [Loading] Done in C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject\project, returning: (airportproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4819.616ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.1185ms
[debug]         Load.loadUnit(file:/C:/Users/theom/Desktop/Scala/Scala-projet-LOUAFI-MARTIN/airportproject/project/, ...) took 4873.2807ms
[debug]       Load.apply: load took 4876.6493ms
[debug]       Load.apply: resolveProjects took 0.2366ms
[debug]       Load.apply: finalTransforms took 23.4341ms
[debug]       Load.apply: config.delegates took 0.9173ms
[debug]       Load.apply: Def.make(settings)... took 185.4161ms
[debug]       Load.apply: structureIndex took 122.6436ms
[debug]       Load.apply: mkStreams took 0.0039ms
[info] loading project definition from C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9147.2362ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject
[debug]       Load.loadUnit: mkEval took 0.4995ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.2451 ms
[info] loading settings for project airportproject from build.sbt ...
[debug]         Load.resolveProject(airportproject) took 75.867ms
[debug]       Load.loadTransitive: finalizeProject(Project(id airportproject, base: C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject, plugins: List(<none>))) took 84.8693ms
[debug] [Loading] Done in C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject, returning: (airportproject)
[debug]     Load.loadUnit: loadedProjectsRaw took 3863.6124ms
[debug]     Load.loadUnit: cleanEvalClasses took 80.0177ms
[debug]   Load.loadUnit(file:/C:/Users/theom/Desktop/Scala/Scala-projet-LOUAFI-MARTIN/airportproject/, ...) took 13092.8465ms
[debug] Load.apply: load took 13097.333ms
[debug] Load.apply: resolveProjects took 0.2597ms
[debug] Load.apply: finalTransforms took 68.6964ms
[debug] Load.apply: config.delegates took 0.8256ms
[debug] Load.apply: Def.make(settings)... took 201.9347ms
[debug] Load.apply: structureIndex took 51.5565ms
[debug] Load.apply: mkStreams took 0.0044ms
[info] set current project to airportProject (in build file:/C:/Users/theom/Desktop/Scala/Scala-projet-LOUAFI-MARTIN/airportproject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49392 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49392, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to airportProject (in build file:/C:/Users/theom/Desktop/Scala/Scala-projet-LOUAFI-MARTIN/airportproject/)
[debug] > Exec(idea-shell, None, None)
