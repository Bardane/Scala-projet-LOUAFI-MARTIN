[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\theom\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\theom\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 165.3282ms
[debug]       Load.loadUnit: defsScala took 0.421801ms
[debug] [Loading] Scanning directory C:\Users\theom\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\theom\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 36.078599 ms
[debug]           Load.resolveProject(global-plugins) took 83.793399ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\theom\.sbt\1.0\plugins, plugins: List(<none>))) took 160.533601ms
[debug] [Loading] Done in C:\Users\theom\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 194.8405ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.375ms
[debug]     Load.loadUnit(file:/C:/Users/theom/.sbt/1.0/plugins/, ...) took 375.931ms
[debug]   Load.apply: load took 680.0852ms
[debug]   Load.apply: resolveProjects took 7.589ms
[debug]   Load.apply: finalTransforms took 84.8917ms
[debug]   Load.apply: config.delegates took 9.0311ms
[debug]   Load.apply: Def.make(settings)... took 587.6628ms
[debug]   Load.apply: structureIndex took 166.7531ms
[debug]   Load.apply: mkStreams took 2.4949ms
[info] loading global plugins from C:\Users\theom\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3553.1987ms
[debug]           Load.loadUnit: plugins took 36.504701ms
[debug]           Load.loadUnit: defsScala took 0.0109ms
[debug] [Loading] Scanning directory C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject\project
[debug]             Load.loadUnit: mkEval took 8.659499ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.497699 ms
[info] loading settings for project airportproject-build from idea.sbt ...
[debug]               Load.resolveProject(airportproject-build) took 4.878ms
[debug]             Load.loadTransitive: finalizeProject(Project(id airportproject-build, base: C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject\project, plugins: List(<none>))) took 8.4989ms
[debug] [Loading] Done in C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject\project, returning: (airportproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3621.6084ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.4945ms
[debug]         Load.loadUnit(file:/C:/Users/theom/Desktop/Scala/Scala-projet-LOUAFI-MARTIN/airportproject/project/, ...) took 3673.4032ms
[debug]       Load.apply: load took 3675.6354ms
[debug]       Load.apply: resolveProjects took 0.137501ms
[debug]       Load.apply: finalTransforms took 17.564899ms
[debug]       Load.apply: config.delegates took 0.6396ms
[debug]       Load.apply: Def.make(settings)... took 117.9004ms
[debug]       Load.apply: structureIndex took 45.9899ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9511.6538ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject
[debug]       Load.loadUnit: mkEval took 0.3502ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2613 ms
[info] loading settings for project airportproject from build.sbt ...
[debug]         Load.resolveProject(airportproject) took 29.3ms
[debug]       Load.loadTransitive: finalizeProject(Project(id airportproject, base: C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject, plugins: List(<none>))) took 32.610799ms
[debug] [Loading] Done in C:\Users\theom\Desktop\Scala\Scala-projet-LOUAFI-MARTIN\airportproject, returning: (airportproject)
[debug]     Load.loadUnit: loadedProjectsRaw took 1610.473001ms
[debug]     Load.loadUnit: cleanEvalClasses took 30.5878ms
[debug]   Load.loadUnit(file:/C:/Users/theom/Desktop/Scala/Scala-projet-LOUAFI-MARTIN/airportproject/, ...) took 11153.725901ms
[debug] Load.apply: load took 11155.895101ms
[debug] Load.apply: resolveProjects took 0.1106ms
[debug] Load.apply: finalTransforms took 31.5497ms
[debug] Load.apply: config.delegates took 0.462699ms
[debug] Load.apply: Def.make(settings)... took 62.4142ms
[debug] Load.apply: structureIndex took 24.7853ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to airportProject (in build file:/C:/Users/theom/Desktop/Scala/Scala-projet-LOUAFI-MARTIN/airportproject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50450 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50450, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to airportProject (in build file:/C:/Users/theom/Desktop/Scala/Scala-projet-LOUAFI-MARTIN/airportproject/)
[debug] > Exec(idea-shell, None, None)
